[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "valori"
dynamic = ["version"]
description = "A high-performance vector database library for Python"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Varshith", email = "varshith.gudur17@gmail.com"},
]
maintainers = [
    {name = "Varshith", email = "varshith.gudur17@gmail.com"},
]
keywords = ["vector", "database", "similarity", "search", "machine-learning", "embeddings"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.19.0",
    "scikit-learn>=0.24.0",
    "sentence-transformers>=2.2.0",
    "PyPDF2>=3.0.0",
    "python-docx>=0.8.11",
    "openpyxl>=3.1.0",
    "python-pptx>=0.6.21",
    "chardet>=5.0.0",
    "nltk>=3.8",
    "beautifulsoup4>=4.11.0",
    "annoy>=1.17.0",
    "pathlib2>=2.3.0; python_version<'3.4'",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "pytest-xdist>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.910",
    "pre-commit>=2.0",
    "sphinx>=4.0",
    "sphinx-rtd-theme>=0.5",
    "safety>=1.10",
    "bandit>=1.7",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=0.5",
    "sphinx-autodoc-typehints>=1.12",
]
benchmark = [
    "matplotlib>=3.3",
    "seaborn>=0.11",
    "pandas>=1.3",
]
parsing = [
    "docling>=1.0.0",
    "llama-parse>=0.4.0",
    "transformers>=4.21.0",
    "torch>=1.12.0",
    "pytesseract>=0.3.10",
    "easyocr>=1.7.0",
]

[project.urls]
Homepage = "https://github.com/varshith-Git/valori"
Documentation = "https://github.com/varshith-Git/valori"
Repository = "https://github.com/varshith-Git/valori.git"
"Bug Tracker" = "https://github.com/varshith-Git/valori/issues"
"Source Code" = "https://github.com/varshith-Git/valori"

[project.scripts]
valori-benchmark = "scripts.benchmark:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
valori = ["py.typed"]

[tool.setuptools_scm]
write_to = "src/valori/_version.py"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "sklearn.*",
    "numpy.*",
    "pathlib2.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "benchmark: marks tests as benchmark tests",
]

[tool.coverage.run]
source = ["src/valori"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    ".venv",
    ".env",
]
